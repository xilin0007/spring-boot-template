server:
  port: 8891
#  servlet:
#    context-path: /hsmallpg-order
#  port: ${random.int[10000,19999]}
spring:
  application:
    name: sbtemplate-order
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://10.1.10.89:3306/hsmallpg?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2b8&allowMultiQueries=true
    username: hsmallpg
    password: hsmallpg
  jackson:
    #null的字段不返回给前端
    default-property-inclusion: non_null
    time-zone: GMT+8
    #返回给前端的date类型格式化
    date-format: yyyy-MM-dd HH:mm:ss
  #kafka相关配置
  kafka:
    bootstrap-servers: 10.1.2.64:9092,10.1.2.74:9092,10.1.2.75:9092
    listener:
      #设置消费者线程数为2，一般数量不要超过topic的partitions分区数
      concurrency: 2
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        #生产消息时不添加headers，防止低版本的kafka服务端生产消息时报错No type information in headers and no default type provided
        spring.json.add.type.headers: false

    consumer:
      group-id: sbtemplate-order-service
      auto-offset-reset: earliest
      enable-auto-commit: true
      #自动提交offset时间间隔（毫秒）
      auto-commit-interval: 1000
      #批量一次最大拉取数据量
      max-poll-records: 20
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        #default value type if no header，防止消费者解析时报错
        spring.json.value.default.type: com.fxl.sbtemplate.util.util.Message

  # 注册到 Spring Boot Admin Server
  boot:
    admin:
      client:
        #url: http://192.168.10.72:8886
        url: http://localhost:8886
        username: nykj
        password: 123456
        #重复注册的时间间隔（毫秒），默认10000
        period: 10000
        #连接注册的超时时间，默认5000
        connect-timeout: 5000
        #读取注册超时时间，默认5000
        read-timeout: 5000
        instance:
          prefer-ip: true
          service-url: http://localhost:8891


# 展示 health 详情
management:
  endpoint:
    health:
      show-details: ALWAYS
  # 暴露所有endpoints（方便 Spring Boot Admin 展示）
  endpoints:
    web:
      exposure.include: "*"

eureka:
  client:
    serviceUrl:
      #defaultZone: http://192.168.10.72:8761/eureka/
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    instanceId: ${spring.cloud.client.ip-address}:${server.port}


#mybatis:
#  config-location: classpath:mybatis/mybatis-config.xml
#  mapper-locations: classpath:mybatis/mapper/*.xml
mybatis-plus:
  mapper-locations: classpath:mybatis/mapper/*.xml
  global-config:
    db-config:
      id-type: NONE
      column-like: true
      db-type: mysql
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

logging:
  config: classpath:log4j2.xml
  #配置后file或path后可在admin界面中查看日志文件
  #file: ./logs/info.log
  level:
    #配置后，防止admin界面Loggers菜单报错Fetching loggers failed.
    root: DEBUG
    com.fxl.sbtemplate.orderservice : debug
